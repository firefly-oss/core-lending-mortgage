openapi: 3.0.1
info:
  title: core-lending-mortgages
  description: Mortgages Core Application
  contact:
    name: Firefly Software Solutions Inc
    email: dev@getfirefly.io
  version: 1.0.0
servers:
  - url: http://core.getfirefly.io/mortgages
    description: Development Environment
  - url: /
    description: Local Development Environment
tags:
  - name: MortgageDisbursement
    description: Record of funds disbursed under a mortgage contract
  - name: MortgageAppraisal
    description: Appraisal records for a mortgage application
  - name: MortgageApplication
    description: Operations on mortgage applications
  - name: MortgageApplicationStatusHistory
    description: Status history logs for a mortgage application
  - name: MortgageDocument
    description: Documents provided for a mortgage application
  - name: MortgageProperty
    description: Management of properties used as collateral for mortgages
  - name: MortgagePaymentRecord
    description: Payments made toward a mortgage contract
  - name: MortgagePaymentSchedule
    description: Scheduled installments for a mortgage contract
  - name: MortgageNotification
    description: Notifications or alerts related to a mortgage contract
  - name: MortgageInsurance
    description: Insurance policies associated with a mortgage contract
  - name: MortgageContract
    description: Operations on final mortgage contracts
paths:
  /api/v1/mortgage-properties/{propertyId}:
    get:
      tags:
        - MortgageProperty
      summary: Get a property record by ID
      operationId: getById
      parameters:
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgagePropertyDTO'
    put:
      tags:
        - MortgageProperty
      summary: Update a property record
      operationId: update
      parameters:
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgagePropertyDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgagePropertyDTO'
    delete:
      tags:
        - MortgageProperty
      summary: Delete a property record
      operationId: delete
      parameters:
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/v1/mortgage-contracts/{mortgageContractId}:
    get:
      tags:
        - MortgageContract
      summary: Get a mortgage contract by ID
      operationId: getById_1
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageContractDTO'
    put:
      tags:
        - MortgageContract
      summary: Update a mortgage contract
      operationId: update_1
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgageContractDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageContractDTO'
    delete:
      tags:
        - MortgageContract
      summary: Delete a mortgage contract
      operationId: delete_1
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/v1/mortgage-contracts/{mortgageContractId}/payment-schedule/{scheduleId}:
    get:
      tags:
        - MortgagePaymentSchedule
      summary: Get a specific payment schedule entry by ID
      operationId: getById_2
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgagePaymentScheduleDTO'
    put:
      tags:
        - MortgagePaymentSchedule
      summary: Update a payment schedule entry
      operationId: update_2
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgagePaymentScheduleDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgagePaymentScheduleDTO'
    delete:
      tags:
        - MortgagePaymentSchedule
      summary: Delete a payment schedule entry
      operationId: delete_2
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/v1/mortgage-contracts/{mortgageContractId}/payment-records/{paymentRecordId}:
    get:
      tags:
        - MortgagePaymentRecord
      summary: Get a payment record by ID
      operationId: getById_3
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentRecordId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgagePaymentRecordDTO'
    put:
      tags:
        - MortgagePaymentRecord
      summary: Update a payment record
      operationId: update_3
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentRecordId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgagePaymentRecordDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgagePaymentRecordDTO'
    delete:
      tags:
        - MortgagePaymentRecord
      summary: Delete a payment record
      operationId: delete_3
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentRecordId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/v1/mortgage-contracts/{mortgageContractId}/notifications/{notificationId}:
    get:
      tags:
        - MortgageNotification
      summary: Get a notification record by ID
      operationId: getById_4
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: notificationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageNotificationDTO'
    put:
      tags:
        - MortgageNotification
      summary: Update a notification record
      operationId: update_4
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: notificationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgageNotificationDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageNotificationDTO'
    delete:
      tags:
        - MortgageNotification
      summary: Delete a notification record
      operationId: delete_4
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: notificationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/v1/mortgage-contracts/{mortgageContractId}/insurance/{insuranceId}:
    get:
      tags:
        - MortgageInsurance
      summary: Get an insurance record by ID
      operationId: getById_5
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: insuranceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageInsuranceDTO'
    put:
      tags:
        - MortgageInsurance
      summary: Update an insurance record
      operationId: update_5
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: insuranceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgageInsuranceDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageInsuranceDTO'
    delete:
      tags:
        - MortgageInsurance
      summary: Delete an insurance record
      operationId: delete_5
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: insuranceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/v1/mortgage-contracts/{mortgageContractId}/disbursements/{mortgageDisbursementId}:
    get:
      tags:
        - MortgageDisbursement
      summary: Get a disbursement record by ID
      operationId: getById_6
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mortgageDisbursementId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageDisbursementDTO'
    put:
      tags:
        - MortgageDisbursement
      summary: Update a disbursement record
      operationId: update_6
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mortgageDisbursementId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgageDisbursementDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageDisbursementDTO'
    delete:
      tags:
        - MortgageDisbursement
      summary: Delete a disbursement record
      operationId: delete_6
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mortgageDisbursementId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/v1/mortgage-applications/{mortgageApplicationId}:
    get:
      tags:
        - MortgageApplication
      summary: Get a mortgage application by ID
      operationId: getById_7
      parameters:
        - name: mortgageApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageApplicationDTO'
    put:
      tags:
        - MortgageApplication
      summary: Update a mortgage application
      operationId: update_7
      parameters:
        - name: mortgageApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgageApplicationDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageApplicationDTO'
    delete:
      tags:
        - MortgageApplication
      summary: Delete a mortgage application
      operationId: delete_7
      parameters:
        - name: mortgageApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/v1/mortgage-applications/{mortgageApplicationId}/status-history/{statusHistoryId}:
    get:
      tags:
        - MortgageApplicationStatusHistory
      summary: Get a status history record by ID
      operationId: getById_8
      parameters:
        - name: mortgageApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: statusHistoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageApplicationStatusHistoryDTO'
    put:
      tags:
        - MortgageApplicationStatusHistory
      summary: Update a status history record
      operationId: update_8
      parameters:
        - name: mortgageApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: statusHistoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgageApplicationStatusHistoryDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageApplicationStatusHistoryDTO'
    delete:
      tags:
        - MortgageApplicationStatusHistory
      summary: Delete a status history record
      operationId: delete_8
      parameters:
        - name: mortgageApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: statusHistoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/v1/mortgage-applications/{mortgageApplicationId}/documents/{documentId}:
    get:
      tags:
        - MortgageDocument
      summary: Get a document record by ID
      operationId: getById_9
      parameters:
        - name: mortgageApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: documentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageDocumentDTO'
    put:
      tags:
        - MortgageDocument
      summary: Update a mortgage document record
      operationId: update_9
      parameters:
        - name: mortgageApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: documentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgageDocumentDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageDocumentDTO'
    delete:
      tags:
        - MortgageDocument
      summary: Delete a mortgage document record
      operationId: delete_9
      parameters:
        - name: mortgageApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: documentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/v1/mortgage-applications/{mortgageApplicationId}/appraisals/{appraisalId}:
    get:
      tags:
        - MortgageAppraisal
      summary: Get an appraisal record by ID
      operationId: getById_10
      parameters:
        - name: mortgageApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: appraisalId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageAppraisalDTO'
    put:
      tags:
        - MortgageAppraisal
      summary: Update an appraisal record
      operationId: update_10
      parameters:
        - name: mortgageApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: appraisalId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgageAppraisalDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageAppraisalDTO'
    delete:
      tags:
        - MortgageAppraisal
      summary: Delete an appraisal record
      operationId: delete_10
      parameters:
        - name: mortgageApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: appraisalId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/v1/mortgage-properties:
    get:
      tags:
        - MortgageProperty
      summary: List or search mortgage properties
      operationId: findAll
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.propertyType
          in: query
          description: Exact filter for property type
          required: false
          schema:
            type: string
            enum:
              - RESIDENTIAL
              - COMMERCIAL
              - LAND
              - INDUSTRIAL
        - name: filters.propertyStatus
          in: query
          description: Exact filter for property status
          required: false
          schema:
            type: string
            enum:
              - NEW
              - USED
              - OFF_PLAN
              - UNDER_CONSTRUCTION
        - name: filters.propertyUse
          in: query
          description: Exact filter for property use
          required: false
          schema:
            type: string
            enum:
              - PRIMARY_RESIDENCE
              - SECOND_HOME
              - INVESTMENT
        - name: filters.addressLine1
          in: query
          description: Exact filter for address line1
          required: false
          schema:
            type: string
        - name: filters.addressLine2
          in: query
          description: Exact filter for address line2
          required: false
          schema:
            type: string
        - name: filters.city
          in: query
          description: Exact filter for city
          required: false
          schema:
            type: string
        - name: filters.state
          in: query
          description: Exact filter for state
          required: false
          schema:
            type: string
        - name: filters.postalCode
          in: query
          description: Exact filter for postal code
          required: false
          schema:
            type: string
        - name: filters.countryCode
          in: query
          description: Exact filter for country code
          required: false
          schema:
            type: string
        - name: filters.landArea
          in: query
          description: Exact filter for land area
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[landArea].from
          in: query
          description: Filter land area from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[landArea].to
          in: query
          description: Filter land area to value
          required: false
          schema:
            type: string
        - name: filters.builtArea
          in: query
          description: Exact filter for built area
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[builtArea].from
          in: query
          description: Filter built area from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[builtArea].to
          in: query
          description: Filter built area to value
          required: false
          schema:
            type: string
        - name: filters.constructionYear
          in: query
          description: Exact filter for construction year
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[constructionYear].from
          in: query
          description: Filter construction year from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[constructionYear].to
          in: query
          description: Filter construction year to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.renovationYear
          in: query
          description: Exact filter for renovation year
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[renovationYear].from
          in: query
          description: Filter renovation year from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[renovationYear].to
          in: query
          description: Filter renovation year to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.titleNumber
          in: query
          description: Exact filter for title number
          required: false
          schema:
            type: string
        - name: filters.cadastralReference
          in: query
          description: Exact filter for cadastral reference
          required: false
          schema:
            type: string
        - name: filters.legalDescription
          in: query
          description: Exact filter for legal description
          required: false
          schema:
            type: string
        - name: filters.totalRooms
          in: query
          description: Exact filter for total rooms
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[totalRooms].from
          in: query
          description: Filter total rooms from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[totalRooms].to
          in: query
          description: Filter total rooms to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.totalBedrooms
          in: query
          description: Exact filter for total bedrooms
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[totalBedrooms].from
          in: query
          description: Filter total bedrooms from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[totalBedrooms].to
          in: query
          description: Filter total bedrooms to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.totalBathrooms
          in: query
          description: Exact filter for total bathrooms
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[totalBathrooms].from
          in: query
          description: Filter total bathrooms from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[totalBathrooms].to
          in: query
          description: Filter total bathrooms to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.hasParking
          in: query
          description: Exact filter for has parking
          required: false
          schema:
            type: boolean
        - name: filters.parkingSpaces
          in: query
          description: Exact filter for parking spaces
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[parkingSpaces].from
          in: query
          description: Filter parking spaces from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[parkingSpaces].to
          in: query
          description: Filter parking spaces to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.hasStorage
          in: query
          description: Exact filter for has storage
          required: false
          schema:
            type: boolean
        - name: filters.storageArea
          in: query
          description: Exact filter for storage area
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[storageArea].from
          in: query
          description: Filter storage area from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[storageArea].to
          in: query
          description: Filter storage area to value
          required: false
          schema:
            type: string
        - name: filters.hasElevator
          in: query
          description: Exact filter for has elevator
          required: false
          schema:
            type: boolean
        - name: filters.floorNumber
          in: query
          description: Exact filter for floor number
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[floorNumber].from
          in: query
          description: Filter floor number from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[floorNumber].to
          in: query
          description: Filter floor number to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.energyRating
          in: query
          description: Exact filter for energy rating
          required: false
          schema:
            type: string
            enum:
              - A
              - B
              - C
              - D
              - E
              - F
              - G
              - UNKNOWN
        - name: filters.restrictions
          in: query
          description: Exact filter for restrictions
          required: false
          schema:
            type: string
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseMortgagePropertyDTO'
    post:
      tags:
        - MortgageProperty
      summary: Create a new property record
      operationId: create
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgagePropertyDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgagePropertyDTO'
  /api/v1/mortgage-contracts:
    get:
      tags:
        - MortgageContract
      summary: List or search mortgage contracts
      operationId: findAll_1
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.mortgageApplicationId
          in: query
          description: Exact filter for mortgage application id
          required: false
          schema:
            type: string
        - name: filters.propertyId
          in: query
          description: Exact filter for property id
          required: false
          schema:
            type: string
        - name: filters.contractNumber
          in: query
          description: Exact filter for contract number
          required: false
          schema:
            type: string
        - name: filters.contractStatus
          in: query
          description: Exact filter for contract status
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - DISBURSED
              - REPAID
              - DEFAULTED
              - TERMINATED
        - name: filters.loanAmount
          in: query
          description: Exact filter for loan amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[loanAmount].from
          in: query
          description: Filter loan amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[loanAmount].to
          in: query
          description: Filter loan amount to value
          required: false
          schema:
            type: string
        - name: filters.interestRate
          in: query
          description: Exact filter for interest rate
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[interestRate].from
          in: query
          description: Filter interest rate from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[interestRate].to
          in: query
          description: Filter interest rate to value
          required: false
          schema:
            type: string
        - name: filters.rateType
          in: query
          description: Exact filter for rate type
          required: false
          schema:
            type: string
            enum:
              - FIXED
              - VARIABLE
              - HYBRID
        - name: filters.referenceRate
          in: query
          description: Exact filter for reference rate
          required: false
          schema:
            type: string
        - name: filters.marginRate
          in: query
          description: Exact filter for margin rate
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[marginRate].from
          in: query
          description: Filter margin rate from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[marginRate].to
          in: query
          description: Filter margin rate to value
          required: false
          schema:
            type: string
        - name: filters.termMonths
          in: query
          description: Exact filter for term months
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[termMonths].from
          in: query
          description: Filter term months from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[termMonths].to
          in: query
          description: Filter term months to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.startDate
          in: query
          description: Exact filter for start date
          required: false
          schema:
            type: string
        - name: filters.maturityDate
          in: query
          description: Exact filter for maturity date
          required: false
          schema:
            type: string
        - name: filters.monthlyPayment
          in: query
          description: Exact filter for monthly payment
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[monthlyPayment].from
          in: query
          description: Filter monthly payment from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[monthlyPayment].to
          in: query
          description: Filter monthly payment to value
          required: false
          schema:
            type: string
        - name: filters.earlyRepaymentFee
          in: query
          description: Exact filter for early repayment fee
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[earlyRepaymentFee].from
          in: query
          description: Filter early repayment fee from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[earlyRepaymentFee].to
          in: query
          description: Filter early repayment fee to value
          required: false
          schema:
            type: string
        - name: filters.assumable
          in: query
          description: Exact filter for assumable
          required: false
          schema:
            type: boolean
        - name: filters.taxRate
          in: query
          description: Exact filter for tax rate
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[taxRate].from
          in: query
          description: Filter tax rate from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[taxRate].to
          in: query
          description: Filter tax rate to value
          required: false
          schema:
            type: string
        - name: filters.specialConditions
          in: query
          description: Exact filter for special conditions
          required: false
          schema:
            type: string
        - name: filters.notaryReference
          in: query
          description: Exact filter for notary reference
          required: false
          schema:
            type: string
        - name: filters.signingDate
          in: query
          description: Exact filter for signing date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[signingDate].from
          in: query
          description: Filter signing date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[signingDate].to
          in: query
          description: Filter signing date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseMortgageContractDTO'
    post:
      tags:
        - MortgageContract
      summary: Create a new mortgage contract
      operationId: create_1
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgageContractDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageContractDTO'
  /api/v1/mortgage-contracts/{mortgageContractId}/payment-schedule:
    get:
      tags:
        - MortgagePaymentSchedule
      summary: List or search the mortgage payment schedule for a contract
      operationId: findAll_2
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.mortgageContractId
          in: query
          description: Exact filter for mortgage contract id
          required: false
          schema:
            type: string
        - name: filters.installmentNumber
          in: query
          description: Exact filter for installment number
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[installmentNumber].from
          in: query
          description: Filter installment number from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[installmentNumber].to
          in: query
          description: Filter installment number to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.dueDate
          in: query
          description: Exact filter for due date
          required: false
          schema:
            type: string
        - name: filters.principalAmount
          in: query
          description: Exact filter for principal amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[principalAmount].from
          in: query
          description: Filter principal amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[principalAmount].to
          in: query
          description: Filter principal amount to value
          required: false
          schema:
            type: string
        - name: filters.interestAmount
          in: query
          description: Exact filter for interest amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[interestAmount].from
          in: query
          description: Filter interest amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[interestAmount].to
          in: query
          description: Filter interest amount to value
          required: false
          schema:
            type: string
        - name: filters.feeAmount
          in: query
          description: Exact filter for fee amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[feeAmount].from
          in: query
          description: Filter fee amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[feeAmount].to
          in: query
          description: Filter fee amount to value
          required: false
          schema:
            type: string
        - name: filters.escrowAmount
          in: query
          description: Exact filter for escrow amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[escrowAmount].from
          in: query
          description: Filter escrow amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[escrowAmount].to
          in: query
          description: Filter escrow amount to value
          required: false
          schema:
            type: string
        - name: filters.totalAmount
          in: query
          description: Exact filter for total amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[totalAmount].from
          in: query
          description: Filter total amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[totalAmount].to
          in: query
          description: Filter total amount to value
          required: false
          schema:
            type: string
        - name: filters.paymentStatus
          in: query
          description: Exact filter for payment status
          required: false
          schema:
            type: string
            enum:
              - SCHEDULED
              - PAID
              - OVERDUE
              - PARTIALLY_PAID
              - WAIVED
        - name: filters.paidDate
          in: query
          description: Exact filter for paid date
          required: false
          schema:
            type: string
        - name: filters.outstandingBalance
          in: query
          description: Exact filter for outstanding balance
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[outstandingBalance].from
          in: query
          description: Filter outstanding balance from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[outstandingBalance].to
          in: query
          description: Filter outstanding balance to value
          required: false
          schema:
            type: string
        - name: filters.lateFeeAmount
          in: query
          description: Exact filter for late fee amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[lateFeeAmount].from
          in: query
          description: Filter late fee amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[lateFeeAmount].to
          in: query
          description: Filter late fee amount to value
          required: false
          schema:
            type: string
        - name: filters.daysLate
          in: query
          description: Exact filter for days late
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[daysLate].from
          in: query
          description: Filter days late from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[daysLate].to
          in: query
          description: Filter days late to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.paymentBreakdown
          in: query
          description: Exact filter for payment breakdown
          required: false
          schema:
            type: string
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseMortgagePaymentScheduleDTO'
    post:
      tags:
        - MortgagePaymentSchedule
      summary: Create a new payment schedule entry
      operationId: create_2
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgagePaymentScheduleDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgagePaymentScheduleDTO'
  /api/v1/mortgage-contracts/{mortgageContractId}/payment-records:
    get:
      tags:
        - MortgagePaymentRecord
      summary: List or search mortgage payment records for a contract
      operationId: findAll_3
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.mortgageContractId
          in: query
          description: Exact filter for mortgage contract id
          required: false
          schema:
            type: string
        - name: filters.paymentScheduleId
          in: query
          description: Exact filter for payment schedule id
          required: false
          schema:
            type: string
        - name: filters.transactionId
          in: query
          description: Exact filter for transaction id
          required: false
          schema:
            type: string
        - name: filters.paymentAmount
          in: query
          description: Exact filter for payment amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[paymentAmount].from
          in: query
          description: Filter payment amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[paymentAmount].to
          in: query
          description: Filter payment amount to value
          required: false
          schema:
            type: string
        - name: filters.paymentDate
          in: query
          description: Exact filter for payment date
          required: false
          schema:
            type: string
        - name: filters.isPartialPayment
          in: query
          description: Exact filter for is partial payment
          required: false
          schema:
            type: boolean
        - name: filters.note
          in: query
          description: Exact filter for note
          required: false
          schema:
            type: string
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseMortgagePaymentRecordDTO'
    post:
      tags:
        - MortgagePaymentRecord
      summary: Create a new payment record
      operationId: create_3
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgagePaymentRecordDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgagePaymentRecordDTO'
  /api/v1/mortgage-contracts/{mortgageContractId}/notifications:
    get:
      tags:
        - MortgageNotification
      summary: List or search notifications for a mortgage contract
      operationId: findAll_4
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.mortgageContractId
          in: query
          description: Exact filter for mortgage contract id
          required: false
          schema:
            type: string
        - name: filters.notificationType
          in: query
          description: Exact filter for notification type
          required: false
          schema:
            type: string
            enum:
              - PAYMENT_REMINDER
              - RATE_CHANGE
              - INSURANCE_RENEWAL
              - APPROVAL_STATUS
              - OTHER
        - name: filters.priority
          in: query
          description: Exact filter for priority
          required: false
          schema:
            type: string
            enum:
              - LOW
              - MEDIUM
              - HIGH
              - CRITICAL
        - name: filters.recipient
          in: query
          description: Exact filter for recipient
          required: false
          schema:
            type: string
        - name: filters.message
          in: query
          description: Exact filter for message
          required: false
          schema:
            type: string
        - name: filters.isSent
          in: query
          description: Exact filter for is sent
          required: false
          schema:
            type: boolean
        - name: filters.sentAt
          in: query
          description: Exact filter for sent at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[sentAt].from
          in: query
          description: Filter sent at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[sentAt].to
          in: query
          description: Filter sent at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseMortgageNotificationDTO'
    post:
      tags:
        - MortgageNotification
      summary: Create a new notification record
      operationId: create_4
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgageNotificationDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageNotificationDTO'
  /api/v1/mortgage-contracts/{mortgageContractId}/insurance:
    get:
      tags:
        - MortgageInsurance
      summary: List or search insurance policies for a mortgage contract
      operationId: findAll_5
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.mortgageContractId
          in: query
          description: Exact filter for mortgage contract id
          required: false
          schema:
            type: string
        - name: filters.insuranceType
          in: query
          description: Exact filter for insurance type
          required: false
          schema:
            type: string
            enum:
              - HOMEOWNERS
              - FIRE
              - FLOOD
              - LIFE
              - MORTGAGE_GUARANTEE
              - OTHER
        - name: filters.policyNumber
          in: query
          description: Exact filter for policy number
          required: false
          schema:
            type: string
        - name: filters.providerName
          in: query
          description: Exact filter for provider name
          required: false
          schema:
            type: string
        - name: filters.providerCode
          in: query
          description: Exact filter for provider code
          required: false
          schema:
            type: string
        - name: filters.coverageAmount
          in: query
          description: Exact filter for coverage amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[coverageAmount].from
          in: query
          description: Filter coverage amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[coverageAmount].to
          in: query
          description: Filter coverage amount to value
          required: false
          schema:
            type: string
        - name: filters.deductibleAmount
          in: query
          description: Exact filter for deductible amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[deductibleAmount].from
          in: query
          description: Filter deductible amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[deductibleAmount].to
          in: query
          description: Filter deductible amount to value
          required: false
          schema:
            type: string
        - name: filters.startDate
          in: query
          description: Exact filter for start date
          required: false
          schema:
            type: string
        - name: filters.endDate
          in: query
          description: Exact filter for end date
          required: false
          schema:
            type: string
        - name: filters.annualPremium
          in: query
          description: Exact filter for annual premium
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[annualPremium].from
          in: query
          description: Filter annual premium from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[annualPremium].to
          in: query
          description: Filter annual premium to value
          required: false
          schema:
            type: string
        - name: filters.premiumFrequency
          in: query
          description: Exact filter for premium frequency
          required: false
          schema:
            type: string
            enum:
              - MONTHLY
              - QUARTERLY
              - SEMIANNUAL
              - ANNUAL
        - name: filters.premiumAmount
          in: query
          description: Exact filter for premium amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[premiumAmount].from
          in: query
          description: Filter premium amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[premiumAmount].to
          in: query
          description: Filter premium amount to value
          required: false
          schema:
            type: string
        - name: filters.bankBeneficiary
          in: query
          description: Exact filter for bank beneficiary
          required: false
          schema:
            type: boolean
        - name: filters.isActive
          in: query
          description: Exact filter for is active
          required: false
          schema:
            type: boolean
        - name: filters.lastPaymentDate
          in: query
          description: Exact filter for last payment date
          required: false
          schema:
            type: string
        - name: filters.nextPaymentDate
          in: query
          description: Exact filter for next payment date
          required: false
          schema:
            type: string
        - name: filters.coverageDetails
          in: query
          description: Exact filter for coverage details
          required: false
          schema:
            type: string
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseMortgageInsuranceDTO'
    post:
      tags:
        - MortgageInsurance
      summary: Create a new mortgage insurance record
      operationId: create_5
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgageInsuranceDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageInsuranceDTO'
  /api/v1/mortgage-contracts/{mortgageContractId}/disbursements:
    get:
      tags:
        - MortgageDisbursement
      summary: List or search mortgage disbursements for a contract
      operationId: findAll_6
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.mortgageContractId
          in: query
          description: Exact filter for mortgage contract id
          required: false
          schema:
            type: string
        - name: filters.disbursementAmount
          in: query
          description: Exact filter for disbursement amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[disbursementAmount].from
          in: query
          description: Filter disbursement amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[disbursementAmount].to
          in: query
          description: Filter disbursement amount to value
          required: false
          schema:
            type: string
        - name: filters.disbursementDate
          in: query
          description: Exact filter for disbursement date
          required: false
          schema:
            type: string
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseMortgageDisbursementDTO'
    post:
      tags:
        - MortgageDisbursement
      summary: Create a new disbursement record
      operationId: create_6
      parameters:
        - name: mortgageContractId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgageDisbursementDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageDisbursementDTO'
  /api/v1/mortgage-applications:
    get:
      tags:
        - MortgageApplication
      summary: List or search mortgage applications
      operationId: findAll_7
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.applicantId
          in: query
          description: Exact filter for applicant id
          required: false
          schema:
            type: string
        - name: filters.coApplicantId
          in: query
          description: Exact filter for co applicant id
          required: false
          schema:
            type: string
        - name: filters.propertyId
          in: query
          description: Exact filter for property id
          required: false
          schema:
            type: string
        - name: filters.productId
          in: query
          description: Exact filter for product id
          required: false
          schema:
            type: string
        - name: filters.applicationStatus
          in: query
          description: Exact filter for application status
          required: false
          schema:
            type: string
            enum:
              - DRAFT
              - SUBMITTED
              - UNDER_REVIEW
              - APPROVED
              - REJECTED
              - CLOSED
        - name: filters.applicationChannel
          in: query
          description: Exact filter for application channel
          required: false
          schema:
            type: string
            enum:
              - ONLINE
              - BRANCH
              - PARTNER
              - OTHER
        - name: filters.requestedAmount
          in: query
          description: Exact filter for requested amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[requestedAmount].from
          in: query
          description: Filter requested amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[requestedAmount].to
          in: query
          description: Filter requested amount to value
          required: false
          schema:
            type: string
        - name: filters.requestedTermMonths
          in: query
          description: Exact filter for requested term months
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[requestedTermMonths].from
          in: query
          description: Filter requested term months from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[requestedTermMonths].to
          in: query
          description: Filter requested term months to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.downPayment
          in: query
          description: Exact filter for down payment
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[downPayment].from
          in: query
          description: Filter down payment from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[downPayment].to
          in: query
          description: Filter down payment to value
          required: false
          schema:
            type: string
        - name: filters.monthlyIncome
          in: query
          description: Exact filter for monthly income
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[monthlyIncome].from
          in: query
          description: Filter monthly income from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[monthlyIncome].to
          in: query
          description: Filter monthly income to value
          required: false
          schema:
            type: string
        - name: filters.monthlyExpenses
          in: query
          description: Exact filter for monthly expenses
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[monthlyExpenses].from
          in: query
          description: Filter monthly expenses from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[monthlyExpenses].to
          in: query
          description: Filter monthly expenses to value
          required: false
          schema:
            type: string
        - name: filters.employmentType
          in: query
          description: Exact filter for employment type
          required: false
          schema:
            type: string
            enum:
              - SALARIED
              - SELF_EMPLOYED
              - UNEMPLOYED
              - RETIRED
              - STUDENT
              - OTHER
        - name: filters.residenceType
          in: query
          description: Exact filter for residence type
          required: false
          schema:
            type: string
            enum:
              - OWNED
              - RENTED
              - FAMILY_HOME
              - COMPANY_PROVIDED
              - OTHER
        - name: filters.yearsAtCurrentJob
          in: query
          description: Exact filter for years at current job
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[yearsAtCurrentJob].from
          in: query
          description: Filter years at current job from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[yearsAtCurrentJob].to
          in: query
          description: Filter years at current job to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.yearsAtCurrentAddress
          in: query
          description: Exact filter for years at current address
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[yearsAtCurrentAddress].from
          in: query
          description: Filter years at current address from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[yearsAtCurrentAddress].to
          in: query
          description: Filter years at current address to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.purpose
          in: query
          description: Exact filter for purpose
          required: false
          schema:
            type: string
            enum:
              - PURCHASE
              - REFINANCE
              - CONSTRUCTION
              - EQUITY_RELEASE
              - OTHER
        - name: filters.existingCustomer
          in: query
          description: Exact filter for existing customer
          required: false
          schema:
            type: boolean
        - name: filters.remarks
          in: query
          description: Exact filter for remarks
          required: false
          schema:
            type: string
        - name: filters.assignedTo
          in: query
          description: Exact filter for assigned to
          required: false
          schema:
            type: string
        - name: filters.submissionDate
          in: query
          description: Exact filter for submission date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[submissionDate].from
          in: query
          description: Filter submission date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[submissionDate].to
          in: query
          description: Filter submission date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseMortgageApplicationDTO'
    post:
      tags:
        - MortgageApplication
      summary: Create a new mortgage application
      operationId: create_7
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgageApplicationDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageApplicationDTO'
  /api/v1/mortgage-applications/{mortgageApplicationId}/status-history:
    get:
      tags:
        - MortgageApplicationStatusHistory
      summary: List or search application status history
      operationId: findAll_8
      parameters:
        - name: mortgageApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.mortgageApplicationId
          in: query
          description: Exact filter for mortgage application id
          required: false
          schema:
            type: string
        - name: filters.oldStatus
          in: query
          description: Exact filter for old status
          required: false
          schema:
            type: string
            enum:
              - DRAFT
              - SUBMITTED
              - UNDER_REVIEW
              - APPROVED
              - REJECTED
              - CLOSED
        - name: filters.newStatus
          in: query
          description: Exact filter for new status
          required: false
          schema:
            type: string
            enum:
              - DRAFT
              - SUBMITTED
              - UNDER_REVIEW
              - APPROVED
              - REJECTED
              - CLOSED
        - name: filters.changedBy
          in: query
          description: Exact filter for changed by
          required: false
          schema:
            type: string
        - name: filters.changeReason
          in: query
          description: Exact filter for change reason
          required: false
          schema:
            type: string
        - name: filters.comments
          in: query
          description: Exact filter for comments
          required: false
          schema:
            type: string
        - name: filters.changedAt
          in: query
          description: Exact filter for changed at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[changedAt].from
          in: query
          description: Filter changed at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[changedAt].to
          in: query
          description: Filter changed at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseMortgageApplicationStatusHistoryDTO'
    post:
      tags:
        - MortgageApplicationStatusHistory
      summary: Create a new status change record
      operationId: create_8
      parameters:
        - name: mortgageApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgageApplicationStatusHistoryDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageApplicationStatusHistoryDTO'
  /api/v1/mortgage-applications/{mortgageApplicationId}/documents:
    get:
      tags:
        - MortgageDocument
      summary: List or search documents for a mortgage application
      operationId: findAll_9
      parameters:
        - name: mortgageApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.mortgageApplicationId
          in: query
          description: Exact filter for mortgage application id
          required: false
          schema:
            type: string
        - name: filters.documentType
          in: query
          description: Exact filter for document type
          required: false
          schema:
            type: string
            enum:
              - ID_PROOF
              - INCOME_PROOF
              - PURCHASE_AGREEMENT
              - PROPERTY_DEED
              - CREDIT_REPORT
              - OTHER
        - name: filters.documentReference
          in: query
          description: Exact filter for document reference
          required: false
          schema:
            type: string
        - name: filters.documentDate
          in: query
          description: Exact filter for document date
          required: false
          schema:
            type: string
        - name: filters.isVerified
          in: query
          description: Exact filter for is verified
          required: false
          schema:
            type: boolean
        - name: filters.verifiedBy
          in: query
          description: Exact filter for verified by
          required: false
          schema:
            type: string
        - name: filters.verifiedAt
          in: query
          description: Exact filter for verified at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[verifiedAt].from
          in: query
          description: Filter verified at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[verifiedAt].to
          in: query
          description: Filter verified at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.verificationNotes
          in: query
          description: Exact filter for verification notes
          required: false
          schema:
            type: string
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseMortgageDocumentDTO'
    post:
      tags:
        - MortgageDocument
      summary: Create a new document record for an application
      operationId: create_9
      parameters:
        - name: mortgageApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgageDocumentDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageDocumentDTO'
  /api/v1/mortgage-applications/{mortgageApplicationId}/appraisals:
    get:
      tags:
        - MortgageAppraisal
      summary: List or search appraisals for a mortgage application
      operationId: findAll_10
      parameters:
        - name: mortgageApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.propertyId
          in: query
          description: Exact filter for property id
          required: false
          schema:
            type: string
        - name: filters.mortgageApplicationId
          in: query
          description: Exact filter for mortgage application id
          required: false
          schema:
            type: string
        - name: filters.appraiserName
          in: query
          description: Exact filter for appraiser name
          required: false
          schema:
            type: string
        - name: filters.licenseNumber
          in: query
          description: Exact filter for license number
          required: false
          schema:
            type: string
        - name: filters.appraisalType
          in: query
          description: Exact filter for appraisal type
          required: false
          schema:
            type: string
            enum:
              - FULL_APPRAISAL
              - DRIVE_BY
              - AUTOMATED
              - DESKTOP
              - OTHER
        - name: filters.marketValue
          in: query
          description: Exact filter for market value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[marketValue].from
          in: query
          description: Filter market value from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[marketValue].to
          in: query
          description: Filter market value to value
          required: false
          schema:
            type: string
        - name: filters.rentalValue
          in: query
          description: Exact filter for rental value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[rentalValue].from
          in: query
          description: Filter rental value from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[rentalValue].to
          in: query
          description: Filter rental value to value
          required: false
          schema:
            type: string
        - name: filters.replacementCost
          in: query
          description: Exact filter for replacement cost
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[replacementCost].from
          in: query
          description: Filter replacement cost from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[replacementCost].to
          in: query
          description: Filter replacement cost to value
          required: false
          schema:
            type: string
        - name: filters.landValue
          in: query
          description: Exact filter for land value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[landValue].from
          in: query
          description: Filter land value from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[landValue].to
          in: query
          description: Filter land value to value
          required: false
          schema:
            type: string
        - name: filters.buildingValue
          in: query
          description: Exact filter for building value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[buildingValue].from
          in: query
          description: Filter building value from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[buildingValue].to
          in: query
          description: Filter building value to value
          required: false
          schema:
            type: string
        - name: filters.propertyCondition
          in: query
          description: Exact filter for property condition
          required: false
          schema:
            type: string
            enum:
              - EXCELLENT
              - GOOD
              - FAIR
              - POOR
        - name: filters.locationRating
          in: query
          description: Exact filter for location rating
          required: false
          schema:
            type: string
            enum:
              - A
              - B
              - C
              - D
              - E
        - name: filters.comparableProperties
          in: query
          description: Exact filter for comparable properties
          required: false
          schema:
            type: string
        - name: filters.appraisalDate
          in: query
          description: Exact filter for appraisal date
          required: false
          schema:
            type: string
        - name: filters.expiryDate
          in: query
          description: Exact filter for expiry date
          required: false
          schema:
            type: string
        - name: filters.requiresRepairs
          in: query
          description: Exact filter for requires repairs
          required: false
          schema:
            type: boolean
        - name: filters.requiredRepairs
          in: query
          description: Exact filter for required repairs
          required: false
          schema:
            type: string
        - name: filters.repairCost
          in: query
          description: Exact filter for repair cost
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[repairCost].from
          in: query
          description: Filter repair cost from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[repairCost].to
          in: query
          description: Filter repair cost to value
          required: false
          schema:
            type: string
        - name: filters.assumptions
          in: query
          description: Exact filter for assumptions
          required: false
          schema:
            type: string
        - name: filters.limitations
          in: query
          description: Exact filter for limitations
          required: false
          schema:
            type: string
        - name: filters.methodology
          in: query
          description: Exact filter for methodology
          required: false
          schema:
            type: string
        - name: filters.comments
          in: query
          description: Exact filter for comments
          required: false
          schema:
            type: string
        - name: filters.createdAt
          in: query
          description: Exact filter for created at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].from
          in: query
          description: Filter created at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[createdAt].to
          in: query
          description: Filter created at to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.updatedAt
          in: query
          description: Exact filter for updated at
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].from
          in: query
          description: Filter updated at from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[updatedAt].to
          in: query
          description: Filter updated at to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseMortgageAppraisalDTO'
    post:
      tags:
        - MortgageAppraisal
      summary: Create a new appraisal record
      operationId: create_10
      parameters:
        - name: mortgageApplicationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgageAppraisalDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MortgageAppraisalDTO'
components:
  schemas:
    MortgagePropertyDTO:
      required:
        - addressLine1
        - city
        - countryCode
        - hasElevator
        - hasParking
        - hasStorage
        - postalCode
        - propertyStatus
        - propertyType
        - propertyUse
        - state
      type: object
      properties:
        propertyId:
          type: string
          format: uuid
          readOnly: true
        propertyType:
          type: string
          enum:
            - RESIDENTIAL
            - COMMERCIAL
            - LAND
            - INDUSTRIAL
        propertyStatus:
          type: string
          enum:
            - NEW
            - USED
            - OFF_PLAN
            - UNDER_CONSTRUCTION
        propertyUse:
          type: string
          enum:
            - PRIMARY_RESIDENCE
            - SECOND_HOME
            - INVESTMENT
        addressLine1:
          maxLength: 200
          minLength: 0
          type: string
        addressLine2:
          maxLength: 200
          minLength: 0
          type: string
        city:
          maxLength: 100
          minLength: 0
          type: string
        state:
          maxLength: 100
          minLength: 0
          type: string
        postalCode:
          maxLength: 20
          minLength: 0
          type: string
        countryCode:
          maxLength: 3
          minLength: 2
          type: string
        landArea:
          maximum: 999999.99
          exclusiveMaximum: false
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        builtArea:
          maximum: 999999.99
          exclusiveMaximum: false
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        constructionYear:
          maximum: 2100
          minimum: 1800
          type: integer
          format: int32
        renovationYear:
          maximum: 2100
          minimum: 1800
          type: integer
          format: int32
        titleNumber:
          maxLength: 100
          minLength: 0
          type: string
        cadastralReference:
          maxLength: 100
          minLength: 0
          type: string
        legalDescription:
          maxLength: 1000
          minLength: 0
          type: string
        totalRooms:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
        totalBedrooms:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
        totalBathrooms:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
        hasParking:
          type: boolean
        parkingSpaces:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
        hasStorage:
          type: boolean
        storageArea:
          maximum: 9999.99
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        hasElevator:
          type: boolean
        floorNumber:
          maximum: 200
          minimum: -10
          type: integer
          format: int32
        energyRating:
          type: string
          enum:
            - A
            - B
            - C
            - D
            - E
            - F
            - G
            - UNKNOWN
        restrictions:
          maxLength: 2000
          minLength: 0
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    MortgageContractDTO:
      required:
        - assumable
        - contractNumber
        - contractStatus
        - interestRate
        - loanAmount
        - maturityDate
        - monthlyPayment
        - mortgageApplicationId
        - propertyId
        - rateType
        - startDate
        - termMonths
      type: object
      properties:
        mortgageContractId:
          type: string
          format: uuid
          readOnly: true
        mortgageApplicationId:
          type: string
          format: uuid
        propertyId:
          type: string
          format: uuid
        contractNumber:
          maxLength: 50
          minLength: 0
          type: string
        contractStatus:
          type: string
          enum:
            - ACTIVE
            - DISBURSED
            - REPAID
            - DEFAULTED
            - TERMINATED
        loanAmount:
          maximum: 999999999.99
          exclusiveMaximum: false
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        interestRate:
          maximum: 100
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        rateType:
          type: string
          enum:
            - FIXED
            - VARIABLE
            - HYBRID
        referenceRate:
          maxLength: 50
          minLength: 0
          type: string
        marginRate:
          maximum: 50
          exclusiveMaximum: false
          minimum: -10
          exclusiveMinimum: false
          type: number
        termMonths:
          maximum: 480
          minimum: 1
          type: integer
          format: int32
        startDate:
          type: string
          format: date
        maturityDate:
          type: string
          format: date
        monthlyPayment:
          maximum: 999999.99
          exclusiveMaximum: false
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        earlyRepaymentFee:
          maximum: 999999.99
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        assumable:
          type: boolean
        taxRate:
          maximum: 100
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        specialConditions:
          maxLength: 5000
          minLength: 0
          type: string
        notaryReference:
          maxLength: 100
          minLength: 0
          type: string
        signingDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    MortgagePaymentScheduleDTO:
      required:
        - dueDate
        - installmentNumber
        - interestAmount
        - mortgageContractId
        - outstandingBalance
        - paymentStatus
        - principalAmount
        - totalAmount
      type: object
      properties:
        scheduleId:
          type: string
          format: uuid
          readOnly: true
        mortgageContractId:
          type: string
          format: uuid
        installmentNumber:
          maximum: 480
          minimum: 1
          type: integer
          format: int32
        dueDate:
          type: string
          format: date
        principalAmount:
          maximum: 999999.99
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        interestAmount:
          maximum: 999999.99
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        feeAmount:
          maximum: 99999.99
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        escrowAmount:
          maximum: 99999.99
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        totalAmount:
          maximum: 999999.99
          exclusiveMaximum: false
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        paymentStatus:
          type: string
          enum:
            - SCHEDULED
            - PAID
            - OVERDUE
            - PARTIALLY_PAID
            - WAIVED
        paidDate:
          type: string
          format: date
        outstandingBalance:
          maximum: 999999999.99
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        lateFeeAmount:
          maximum: 99999.99
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        daysLate:
          maximum: 9999
          minimum: 0
          type: integer
          format: int32
        paymentBreakdown:
          maxLength: 2000
          minLength: 0
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    MortgagePaymentRecordDTO:
      required:
        - isPartialPayment
        - mortgageContractId
        - paymentAmount
        - paymentDate
        - paymentScheduleId
        - transactionId
      type: object
      properties:
        paymentRecordId:
          type: string
          format: uuid
          readOnly: true
        mortgageContractId:
          type: string
          format: uuid
        paymentScheduleId:
          type: string
          format: uuid
        transactionId:
          type: string
          format: uuid
        paymentAmount:
          maximum: 999999.99
          exclusiveMaximum: false
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        paymentDate:
          type: string
          format: date
        isPartialPayment:
          type: boolean
        note:
          maxLength: 500
          minLength: 0
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    MortgageNotificationDTO:
      required:
        - isSent
        - message
        - mortgageContractId
        - notificationType
        - priority
        - recipient
      type: object
      properties:
        notificationId:
          type: string
          format: uuid
          readOnly: true
        mortgageContractId:
          type: string
          format: uuid
        notificationType:
          type: string
          enum:
            - PAYMENT_REMINDER
            - RATE_CHANGE
            - INSURANCE_RENEWAL
            - APPROVAL_STATUS
            - OTHER
        priority:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
            - CRITICAL
        recipient:
          maxLength: 200
          minLength: 0
          type: string
        message:
          maxLength: 2000
          minLength: 0
          type: string
        isSent:
          type: boolean
        sentAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
    MortgageInsuranceDTO:
      required:
        - annualPremium
        - bankBeneficiary
        - coverageAmount
        - endDate
        - insuranceType
        - isActive
        - mortgageContractId
        - policyNumber
        - premiumAmount
        - premiumFrequency
        - providerName
        - startDate
      type: object
      properties:
        insuranceId:
          type: string
          format: uuid
          readOnly: true
        mortgageContractId:
          type: string
          format: uuid
        insuranceType:
          type: string
          enum:
            - HOMEOWNERS
            - FIRE
            - FLOOD
            - LIFE
            - MORTGAGE_GUARANTEE
            - OTHER
        policyNumber:
          maxLength: 50
          minLength: 0
          type: string
        providerName:
          maxLength: 100
          minLength: 0
          type: string
        providerCode:
          maxLength: 20
          minLength: 0
          type: string
        coverageAmount:
          maximum: 999999999.99
          exclusiveMaximum: false
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        deductibleAmount:
          maximum: 999999.99
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        annualPremium:
          maximum: 999999.99
          exclusiveMaximum: false
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        premiumFrequency:
          type: string
          enum:
            - MONTHLY
            - QUARTERLY
            - SEMIANNUAL
            - ANNUAL
        premiumAmount:
          maximum: 999999.99
          exclusiveMaximum: false
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        bankBeneficiary:
          type: boolean
        isActive:
          type: boolean
        lastPaymentDate:
          type: string
          format: date
        nextPaymentDate:
          type: string
          format: date
        coverageDetails:
          maxLength: 2000
          minLength: 0
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    MortgageDisbursementDTO:
      required:
        - disbursementAmount
        - disbursementDate
        - mortgageContractId
      type: object
      properties:
        mortgageDisbursementId:
          type: string
          format: uuid
          readOnly: true
        mortgageContractId:
          type: string
          format: uuid
        disbursementAmount:
          maximum: 999999999.99
          exclusiveMaximum: false
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        disbursementDate:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    MortgageApplicationDTO:
      required:
        - applicantId
        - applicationChannel
        - applicationStatus
        - downPayment
        - employmentType
        - existingCustomer
        - monthlyExpenses
        - monthlyIncome
        - productId
        - propertyId
        - purpose
        - requestedAmount
        - requestedTermMonths
        - residenceType
      type: object
      properties:
        mortgageApplicationId:
          type: string
          format: uuid
          readOnly: true
        applicantId:
          type: string
          format: uuid
        coApplicantId:
          type: string
          format: uuid
        propertyId:
          type: string
          format: uuid
        productId:
          type: string
          format: uuid
        applicationStatus:
          type: string
          enum:
            - DRAFT
            - SUBMITTED
            - UNDER_REVIEW
            - APPROVED
            - REJECTED
            - CLOSED
        applicationChannel:
          type: string
          enum:
            - ONLINE
            - BRANCH
            - PARTNER
            - OTHER
        requestedAmount:
          maximum: 999999999.99
          exclusiveMaximum: false
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        requestedTermMonths:
          maximum: 480
          minimum: 1
          type: integer
          format: int32
        downPayment:
          minimum: 0
          exclusiveMinimum: false
          type: number
        monthlyIncome:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        monthlyExpenses:
          minimum: 0
          exclusiveMinimum: false
          type: number
        employmentType:
          type: string
          enum:
            - SALARIED
            - SELF_EMPLOYED
            - UNEMPLOYED
            - RETIRED
            - STUDENT
            - OTHER
        residenceType:
          type: string
          enum:
            - OWNED
            - RENTED
            - FAMILY_HOME
            - COMPANY_PROVIDED
            - OTHER
        yearsAtCurrentJob:
          maximum: 70
          minimum: 0
          type: integer
          format: int32
        yearsAtCurrentAddress:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
        purpose:
          type: string
          enum:
            - PURCHASE
            - REFINANCE
            - CONSTRUCTION
            - EQUITY_RELEASE
            - OTHER
        existingCustomer:
          type: boolean
        remarks:
          maxLength: 1000
          minLength: 0
          type: string
        assignedTo:
          maxLength: 100
          minLength: 0
          type: string
        submissionDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    MortgageApplicationStatusHistoryDTO:
      required:
        - changedAt
        - changedBy
        - mortgageApplicationId
        - newStatus
      type: object
      properties:
        statusHistoryId:
          type: string
          format: uuid
          readOnly: true
        mortgageApplicationId:
          type: string
          format: uuid
        oldStatus:
          type: string
          enum:
            - DRAFT
            - SUBMITTED
            - UNDER_REVIEW
            - APPROVED
            - REJECTED
            - CLOSED
        newStatus:
          type: string
          enum:
            - DRAFT
            - SUBMITTED
            - UNDER_REVIEW
            - APPROVED
            - REJECTED
            - CLOSED
        changedBy:
          maxLength: 100
          minLength: 0
          type: string
        changeReason:
          maxLength: 500
          minLength: 0
          type: string
        comments:
          maxLength: 1000
          minLength: 0
          type: string
        changedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    MortgageDocumentDTO:
      required:
        - documentDate
        - documentReference
        - documentType
        - isVerified
        - mortgageApplicationId
      type: object
      properties:
        documentId:
          type: string
          format: uuid
          readOnly: true
        mortgageApplicationId:
          type: string
          format: uuid
        documentType:
          type: string
          enum:
            - ID_PROOF
            - INCOME_PROOF
            - PURCHASE_AGREEMENT
            - PROPERTY_DEED
            - CREDIT_REPORT
            - OTHER
        documentReference:
          maxLength: 200
          minLength: 0
          type: string
        documentDate:
          type: string
          format: date
        isVerified:
          type: boolean
        verifiedBy:
          maxLength: 100
          minLength: 0
          type: string
        verifiedAt:
          type: string
          format: date-time
        verificationNotes:
          maxLength: 1000
          minLength: 0
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    MortgageAppraisalDTO:
      required:
        - appraisalDate
        - appraisalType
        - appraiserName
        - licenseNumber
        - locationRating
        - marketValue
        - mortgageApplicationId
        - propertyCondition
        - propertyId
        - requiresRepairs
      type: object
      properties:
        appraisalId:
          type: string
          format: uuid
          readOnly: true
        propertyId:
          type: string
          format: uuid
        mortgageApplicationId:
          type: string
          format: uuid
        appraiserName:
          maxLength: 100
          minLength: 0
          type: string
        licenseNumber:
          maxLength: 50
          minLength: 0
          type: string
        appraisalType:
          type: string
          enum:
            - FULL_APPRAISAL
            - DRIVE_BY
            - AUTOMATED
            - DESKTOP
            - OTHER
        marketValue:
          maximum: 999999999.99
          exclusiveMaximum: false
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        rentalValue:
          maximum: 999999999.99
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        replacementCost:
          maximum: 999999999.99
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        landValue:
          maximum: 999999999.99
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        buildingValue:
          maximum: 999999999.99
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        propertyCondition:
          type: string
          enum:
            - EXCELLENT
            - GOOD
            - FAIR
            - POOR
        locationRating:
          type: string
          enum:
            - A
            - B
            - C
            - D
            - E
        comparableProperties:
          maxLength: 5000
          minLength: 0
          type: string
        appraisalDate:
          type: string
          format: date
        expiryDate:
          type: string
          format: date
        requiresRepairs:
          type: boolean
        requiredRepairs:
          maxLength: 2000
          minLength: 0
          type: string
        repairCost:
          maximum: 999999999.99
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        assumptions:
          maxLength: 2000
          minLength: 0
          type: string
        limitations:
          maxLength: 2000
          minLength: 0
          type: string
        methodology:
          maxLength: 1000
          minLength: 0
          type: string
        comments:
          maxLength: 2000
          minLength: 0
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    PaginationResponseMortgagePropertyDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/MortgagePropertyDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseMortgageContractDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/MortgageContractDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseMortgagePaymentScheduleDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/MortgagePaymentScheduleDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseMortgagePaymentRecordDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/MortgagePaymentRecordDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseMortgageNotificationDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/MortgageNotificationDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseMortgageInsuranceDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/MortgageInsuranceDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseMortgageDisbursementDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/MortgageDisbursementDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseMortgageApplicationDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/MortgageApplicationDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseMortgageApplicationStatusHistoryDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/MortgageApplicationStatusHistoryDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseMortgageDocumentDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/MortgageDocumentDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaginationResponseMortgageAppraisalDTO:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            $ref: '#/components/schemas/MortgageAppraisalDTO'
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
